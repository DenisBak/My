#подключаем библиотеку pygame
import pygame
from pygame.sprite import Sprite, Group
import sys

#создадим переменные, которые будут хранить значения параметров отображения игры 
#размеры экрана: ширина = 480, высота = 600, частота обновления экрана = 60
WIDTH = 480
HEIGHT = 600
FPS = 60

# задаем шесть цветов - белый, черный, красный, зеленый, синий, желтый - посредством кортежей
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

# Инициализируем отображение игры
pygame.init()

#Задаем ширину и высоту игрового экрана
WINDOW = pygame.display.set_mode((WIDTH, HEIGHT))
#Задаем подпись у экрана с игрой
pygame.display.set_caption("Space shutle")

#Создает объект, помогающих отслеживать игровое время
clock = pygame.time.Clock()

#опишем класс для Игрока, унаследовав его от Sprite
class Player(pygame.sprite.Sprite):
    #конструктор
    def __init__(self):
        #создаем объект родительского класса
        pygame.sprite.Sprite.__init__(self)
        #изображение Игрока будет в виде прямоугольника 50 на 40 
        self.image = pygame.Surface((50, 40))
        #сделаем этот прямоугольник зеленого цвета
        self.image.fill(GREEN)
        #задаем, в каком месте экрана мы увидим этот прямоугольник
        self.rect = self.image.get_rect()
        self.rect.centerx = WIDTH / 2
        self.rect.bottom = HEIGHT - 10
        #он не движется
        self.speedx = 0

    #как наш Игрок реагирует на события, происходящие извне
    def update(self):
        #уточняем, что Игрок не движется
        self.speedx = 0
        #определяем, какую клавишу мы нажали и записываем это в переменную keystate
        keystate = pygame.key.get_pressed()
        #если мы жмем клавишу ВЛЕВО, то двигаемся влево (аналогия с декартовой СК) - ставим отрицательное значение скорости
        if keystate[pygame.K_LEFT]:
            self.rect.x -= 10
        #если жмем ВПРАВО, то двигаемся вправо
        if keystate[pygame.K_RIGHT]:
            self.rect.x += 10
        # передвинуть объект на speedx пикселей
        self.speedx += 1

#тут пошла игра
#сразу создадим группу, для хранения игровых объектов
all_objects = pygame.sprite.Group()
#создали игрока
player = Player()
#добавим нашего игрока в группу. Это как организуем комнату для игр и впустим туда персонажа
all_objects.add(player)


# Основной ход игры. Пока не нажали "Выход", играем
running = True
while running:
    # задаем частоту обновления экрана
    clock.tick(FPS)
    # Перебираем все события, которые отслеживаются в нашей игре. 
	# Например, нажатие на кнопку закрытия игры (QUIT) или движение мышкой (MOUSEMOTION)
    for event in pygame.event.get():
        # Проверяем, не нажали ли мы кнопку выхода из игры
        if event.type == pygame.QUIT:
            running = False

    all_objects.update()
    # Закрашиваем игровой экран черным цветом
    WINDOW.fill(BLACK)
    # Отрисовываем игровые объекты
    all_objects.draw(WINDOW)
    # Обновляем экран
    pygame.display.flip()

    # Закрываем игру
pygame.quit()
